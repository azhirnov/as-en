==================================================
Batch: 'Graphics'
--------------------------------------------------
name: 'command-buffer'
{
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> FRAGMENT_SHADER
      access:  0 ---> SHADER_SAMPLED_READ
      layout:  UNDEFINED ---> SHADER_READ_ONLY_OPTIMAL
  ----------

  BeginRenderPass2
  DrawMeshTasks
  EndRenderPass2
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> COPY
      access:  SHADER_SAMPLED_READ ---> TRANSFER_READ
      layout:  SHADER_READ_ONLY_OPTIMAL ---> TRANSFER_SRC_OPTIMAL
  ----------

}
--------------------------------------------------
name: 'command-buffer'
{
  CopyImageToBuffer
    src:       'Image'
    srcLayout: TRANSFER_SRC_OPTIMAL
    dst:       'dynamic staging buffer'
      copy { off:(0, 0, 0), ext:(800, 600, 1), mip:0, layers:[0, 1), COLOR } ---> { [0, 1920000) }
  ----------

  PipelineBarrier2
    dependencyFlags: 0
    MemoryBarrier:
      stage:  COPY ---> HOST
      access: TRANSFER_WRITE ---> HOST_READ
  ----------

}
--------------------------------------------------
signalSemaphore = {
  'sync-0',  stage: ALL_COMMANDS
}
==================================================
==================================================
Batch: 'Graphics'
--------------------------------------------------
name: 'command-buffer'
{
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> FRAGMENT_SHADER
      access:  0 ---> SHADER_SAMPLED_READ
      layout:  UNDEFINED ---> SHADER_READ_ONLY_OPTIMAL
  ----------

  BeginRenderPass2
  DrawMeshTasks
  EndRenderPass2
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> COPY
      access:  SHADER_SAMPLED_READ ---> TRANSFER_READ
      layout:  SHADER_READ_ONLY_OPTIMAL ---> TRANSFER_SRC_OPTIMAL
  ----------

}
--------------------------------------------------
name: 'command-buffer'
{
  CopyImageToBuffer
    src:       'Image'
    srcLayout: TRANSFER_SRC_OPTIMAL
    dst:       'dynamic staging buffer'
      copy { off:(0, 0, 0), ext:(800, 600, 1), mip:0, layers:[0, 1), COLOR } ---> { [0, 1920000) }
  ----------

  PipelineBarrier2
    dependencyFlags: 0
    MemoryBarrier:
      stage:  COPY ---> HOST
      access: TRANSFER_WRITE ---> HOST_READ
  ----------

}
--------------------------------------------------
signalSemaphore = {
  'sync-1',  stage: ALL_COMMANDS
}
==================================================
==================================================
Batch: 'Graphics'
--------------------------------------------------
name: 'command-buffer'
{
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> FRAGMENT_SHADER
      access:  0 ---> SHADER_SAMPLED_READ
      layout:  UNDEFINED ---> SHADER_READ_ONLY_OPTIMAL
  ----------

  BeginRenderPass2
  DrawMeshTasks
  EndRenderPass2
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> COPY
      access:  SHADER_SAMPLED_READ ---> TRANSFER_READ
      layout:  SHADER_READ_ONLY_OPTIMAL ---> TRANSFER_SRC_OPTIMAL
  ----------

}
--------------------------------------------------
name: 'command-buffer'
{
  CopyImageToBuffer
    src:       'Image'
    srcLayout: TRANSFER_SRC_OPTIMAL
    dst:       'dynamic staging buffer'
      copy { off:(0, 0, 0), ext:(800, 600, 1), mip:0, layers:[0, 1), COLOR } ---> { [0, 1920000) }
  ----------

  PipelineBarrier2
    dependencyFlags: 0
    MemoryBarrier:
      stage:  COPY ---> HOST
      access: TRANSFER_WRITE ---> HOST_READ
  ----------

}
--------------------------------------------------
signalSemaphore = {
  'sync-2',  stage: ALL_COMMANDS
}
==================================================
==================================================
Batch: 'Graphics'
--------------------------------------------------
name: 'command-buffer'
{
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> FRAGMENT_SHADER
      access:  0 ---> SHADER_SAMPLED_READ
      layout:  UNDEFINED ---> SHADER_READ_ONLY_OPTIMAL
  ----------

  BeginRenderPass2
  DrawMeshTasks
  EndRenderPass2
  PipelineBarrier2
    dependencyFlags: 0
    ImageBarrier:
      name:    'Image'
      stage:   FRAGMENT_SHADER ---> COPY
      access:  SHADER_SAMPLED_READ ---> TRANSFER_READ
      layout:  SHADER_READ_ONLY_OPTIMAL ---> TRANSFER_SRC_OPTIMAL
  ----------

  CopyImageToBuffer
    src:       'Image'
    srcLayout: TRANSFER_SRC_OPTIMAL
    dst:       'dynamic staging buffer'
      copy { off:(0, 0, 0), ext:(800, 600, 1), mip:0, layers:[0, 1), COLOR } ---> { [0, 1920000) }
  ----------

  PipelineBarrier2
    dependencyFlags: 0
    MemoryBarrier:
      stage:  COPY ---> HOST
      access: TRANSFER_WRITE ---> HOST_READ
  ----------

}
--------------------------------------------------
signalSemaphore = {
  'sync-3',  stage: ALL_COMMANDS
}
==================================================
