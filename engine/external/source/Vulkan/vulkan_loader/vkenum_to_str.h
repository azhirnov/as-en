ND_ String  VkFormatToString (const VkFormat value)
{
	switch ( value )
	{
		case VK_FORMAT_UNDEFINED : return "UNDEFINED";
		case VK_FORMAT_R4G4_UNORM_PACK8 : return "R4G4_UNORM_PACK8";
		case VK_FORMAT_R4G4B4A4_UNORM_PACK16 : return "R4G4B4A4_UNORM_PACK16";
		case VK_FORMAT_B4G4R4A4_UNORM_PACK16 : return "B4G4R4A4_UNORM_PACK16";
		case VK_FORMAT_R5G6B5_UNORM_PACK16 : return "R5G6B5_UNORM_PACK16";
		case VK_FORMAT_B5G6R5_UNORM_PACK16 : return "B5G6R5_UNORM_PACK16";
		case VK_FORMAT_R5G5B5A1_UNORM_PACK16 : return "R5G5B5A1_UNORM_PACK16";
		case VK_FORMAT_B5G5R5A1_UNORM_PACK16 : return "B5G5R5A1_UNORM_PACK16";
		case VK_FORMAT_A1R5G5B5_UNORM_PACK16 : return "A1R5G5B5_UNORM_PACK16";
		case VK_FORMAT_R8_UNORM : return "R8_UNORM";
		case VK_FORMAT_R8_SNORM : return "R8_SNORM";
		case VK_FORMAT_R8_USCALED : return "R8_USCALED";
		case VK_FORMAT_R8_SSCALED : return "R8_SSCALED";
		case VK_FORMAT_R8_UINT : return "R8_UINT";
		case VK_FORMAT_R8_SINT : return "R8_SINT";
		case VK_FORMAT_R8_SRGB : return "R8_SRGB";
		case VK_FORMAT_R8G8_UNORM : return "R8G8_UNORM";
		case VK_FORMAT_R8G8_SNORM : return "R8G8_SNORM";
		case VK_FORMAT_R8G8_USCALED : return "R8G8_USCALED";
		case VK_FORMAT_R8G8_SSCALED : return "R8G8_SSCALED";
		case VK_FORMAT_R8G8_UINT : return "R8G8_UINT";
		case VK_FORMAT_R8G8_SINT : return "R8G8_SINT";
		case VK_FORMAT_R8G8_SRGB : return "R8G8_SRGB";
		case VK_FORMAT_R8G8B8_UNORM : return "R8G8B8_UNORM";
		case VK_FORMAT_R8G8B8_SNORM : return "R8G8B8_SNORM";
		case VK_FORMAT_R8G8B8_USCALED : return "R8G8B8_USCALED";
		case VK_FORMAT_R8G8B8_SSCALED : return "R8G8B8_SSCALED";
		case VK_FORMAT_R8G8B8_UINT : return "R8G8B8_UINT";
		case VK_FORMAT_R8G8B8_SINT : return "R8G8B8_SINT";
		case VK_FORMAT_R8G8B8_SRGB : return "R8G8B8_SRGB";
		case VK_FORMAT_B8G8R8_UNORM : return "B8G8R8_UNORM";
		case VK_FORMAT_B8G8R8_SNORM : return "B8G8R8_SNORM";
		case VK_FORMAT_B8G8R8_USCALED : return "B8G8R8_USCALED";
		case VK_FORMAT_B8G8R8_SSCALED : return "B8G8R8_SSCALED";
		case VK_FORMAT_B8G8R8_UINT : return "B8G8R8_UINT";
		case VK_FORMAT_B8G8R8_SINT : return "B8G8R8_SINT";
		case VK_FORMAT_B8G8R8_SRGB : return "B8G8R8_SRGB";
		case VK_FORMAT_R8G8B8A8_UNORM : return "R8G8B8A8_UNORM";
		case VK_FORMAT_R8G8B8A8_SNORM : return "R8G8B8A8_SNORM";
		case VK_FORMAT_R8G8B8A8_USCALED : return "R8G8B8A8_USCALED";
		case VK_FORMAT_R8G8B8A8_SSCALED : return "R8G8B8A8_SSCALED";
		case VK_FORMAT_R8G8B8A8_UINT : return "R8G8B8A8_UINT";
		case VK_FORMAT_R8G8B8A8_SINT : return "R8G8B8A8_SINT";
		case VK_FORMAT_R8G8B8A8_SRGB : return "R8G8B8A8_SRGB";
		case VK_FORMAT_B8G8R8A8_UNORM : return "B8G8R8A8_UNORM";
		case VK_FORMAT_B8G8R8A8_SNORM : return "B8G8R8A8_SNORM";
		case VK_FORMAT_B8G8R8A8_USCALED : return "B8G8R8A8_USCALED";
		case VK_FORMAT_B8G8R8A8_SSCALED : return "B8G8R8A8_SSCALED";
		case VK_FORMAT_B8G8R8A8_UINT : return "B8G8R8A8_UINT";
		case VK_FORMAT_B8G8R8A8_SINT : return "B8G8R8A8_SINT";
		case VK_FORMAT_B8G8R8A8_SRGB : return "B8G8R8A8_SRGB";
		case VK_FORMAT_A8B8G8R8_UNORM_PACK32 : return "A8B8G8R8_UNORM_PACK32";
		case VK_FORMAT_A8B8G8R8_SNORM_PACK32 : return "A8B8G8R8_SNORM_PACK32";
		case VK_FORMAT_A8B8G8R8_USCALED_PACK32 : return "A8B8G8R8_USCALED_PACK32";
		case VK_FORMAT_A8B8G8R8_SSCALED_PACK32 : return "A8B8G8R8_SSCALED_PACK32";
		case VK_FORMAT_A8B8G8R8_UINT_PACK32 : return "A8B8G8R8_UINT_PACK32";
		case VK_FORMAT_A8B8G8R8_SINT_PACK32 : return "A8B8G8R8_SINT_PACK32";
		case VK_FORMAT_A8B8G8R8_SRGB_PACK32 : return "A8B8G8R8_SRGB_PACK32";
		case VK_FORMAT_A2R10G10B10_UNORM_PACK32 : return "A2R10G10B10_UNORM_PACK32";
		case VK_FORMAT_A2R10G10B10_SNORM_PACK32 : return "A2R10G10B10_SNORM_PACK32";
		case VK_FORMAT_A2R10G10B10_USCALED_PACK32 : return "A2R10G10B10_USCALED_PACK32";
		case VK_FORMAT_A2R10G10B10_SSCALED_PACK32 : return "A2R10G10B10_SSCALED_PACK32";
		case VK_FORMAT_A2R10G10B10_UINT_PACK32 : return "A2R10G10B10_UINT_PACK32";
		case VK_FORMAT_A2R10G10B10_SINT_PACK32 : return "A2R10G10B10_SINT_PACK32";
		case VK_FORMAT_A2B10G10R10_UNORM_PACK32 : return "A2B10G10R10_UNORM_PACK32";
		case VK_FORMAT_A2B10G10R10_SNORM_PACK32 : return "A2B10G10R10_SNORM_PACK32";
		case VK_FORMAT_A2B10G10R10_USCALED_PACK32 : return "A2B10G10R10_USCALED_PACK32";
		case VK_FORMAT_A2B10G10R10_SSCALED_PACK32 : return "A2B10G10R10_SSCALED_PACK32";
		case VK_FORMAT_A2B10G10R10_UINT_PACK32 : return "A2B10G10R10_UINT_PACK32";
		case VK_FORMAT_A2B10G10R10_SINT_PACK32 : return "A2B10G10R10_SINT_PACK32";
		case VK_FORMAT_R16_UNORM : return "R16_UNORM";
		case VK_FORMAT_R16_SNORM : return "R16_SNORM";
		case VK_FORMAT_R16_USCALED : return "R16_USCALED";
		case VK_FORMAT_R16_SSCALED : return "R16_SSCALED";
		case VK_FORMAT_R16_UINT : return "R16_UINT";
		case VK_FORMAT_R16_SINT : return "R16_SINT";
		case VK_FORMAT_R16_SFLOAT : return "R16_SFLOAT";
		case VK_FORMAT_R16G16_UNORM : return "R16G16_UNORM";
		case VK_FORMAT_R16G16_SNORM : return "R16G16_SNORM";
		case VK_FORMAT_R16G16_USCALED : return "R16G16_USCALED";
		case VK_FORMAT_R16G16_SSCALED : return "R16G16_SSCALED";
		case VK_FORMAT_R16G16_UINT : return "R16G16_UINT";
		case VK_FORMAT_R16G16_SINT : return "R16G16_SINT";
		case VK_FORMAT_R16G16_SFLOAT : return "R16G16_SFLOAT";
		case VK_FORMAT_R16G16B16_UNORM : return "R16G16B16_UNORM";
		case VK_FORMAT_R16G16B16_SNORM : return "R16G16B16_SNORM";
		case VK_FORMAT_R16G16B16_USCALED : return "R16G16B16_USCALED";
		case VK_FORMAT_R16G16B16_SSCALED : return "R16G16B16_SSCALED";
		case VK_FORMAT_R16G16B16_UINT : return "R16G16B16_UINT";
		case VK_FORMAT_R16G16B16_SINT : return "R16G16B16_SINT";
		case VK_FORMAT_R16G16B16_SFLOAT : return "R16G16B16_SFLOAT";
		case VK_FORMAT_R16G16B16A16_UNORM : return "R16G16B16A16_UNORM";
		case VK_FORMAT_R16G16B16A16_SNORM : return "R16G16B16A16_SNORM";
		case VK_FORMAT_R16G16B16A16_USCALED : return "R16G16B16A16_USCALED";
		case VK_FORMAT_R16G16B16A16_SSCALED : return "R16G16B16A16_SSCALED";
		case VK_FORMAT_R16G16B16A16_UINT : return "R16G16B16A16_UINT";
		case VK_FORMAT_R16G16B16A16_SINT : return "R16G16B16A16_SINT";
		case VK_FORMAT_R16G16B16A16_SFLOAT : return "R16G16B16A16_SFLOAT";
		case VK_FORMAT_R32_UINT : return "R32_UINT";
		case VK_FORMAT_R32_SINT : return "R32_SINT";
		case VK_FORMAT_R32_SFLOAT : return "R32_SFLOAT";
		case VK_FORMAT_R32G32_UINT : return "R32G32_UINT";
		case VK_FORMAT_R32G32_SINT : return "R32G32_SINT";
		case VK_FORMAT_R32G32_SFLOAT : return "R32G32_SFLOAT";
		case VK_FORMAT_R32G32B32_UINT : return "R32G32B32_UINT";
		case VK_FORMAT_R32G32B32_SINT : return "R32G32B32_SINT";
		case VK_FORMAT_R32G32B32_SFLOAT : return "R32G32B32_SFLOAT";
		case VK_FORMAT_R32G32B32A32_UINT : return "R32G32B32A32_UINT";
		case VK_FORMAT_R32G32B32A32_SINT : return "R32G32B32A32_SINT";
		case VK_FORMAT_R32G32B32A32_SFLOAT : return "R32G32B32A32_SFLOAT";
		case VK_FORMAT_R64_UINT : return "R64_UINT";
		case VK_FORMAT_R64_SINT : return "R64_SINT";
		case VK_FORMAT_R64_SFLOAT : return "R64_SFLOAT";
		case VK_FORMAT_R64G64_UINT : return "R64G64_UINT";
		case VK_FORMAT_R64G64_SINT : return "R64G64_SINT";
		case VK_FORMAT_R64G64_SFLOAT : return "R64G64_SFLOAT";
		case VK_FORMAT_R64G64B64_UINT : return "R64G64B64_UINT";
		case VK_FORMAT_R64G64B64_SINT : return "R64G64B64_SINT";
		case VK_FORMAT_R64G64B64_SFLOAT : return "R64G64B64_SFLOAT";
		case VK_FORMAT_R64G64B64A64_UINT : return "R64G64B64A64_UINT";
		case VK_FORMAT_R64G64B64A64_SINT : return "R64G64B64A64_SINT";
		case VK_FORMAT_R64G64B64A64_SFLOAT : return "R64G64B64A64_SFLOAT";
		case VK_FORMAT_B10G11R11_UFLOAT_PACK32 : return "B10G11R11_UFLOAT_PACK32";
		case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 : return "E5B9G9R9_UFLOAT_PACK32";
		case VK_FORMAT_D16_UNORM : return "D16_UNORM";
		case VK_FORMAT_X8_D24_UNORM_PACK32 : return "X8_D24_UNORM_PACK32";
		case VK_FORMAT_D32_SFLOAT : return "D32_SFLOAT";
		case VK_FORMAT_S8_UINT : return "S8_UINT";
		case VK_FORMAT_D16_UNORM_S8_UINT : return "D16_UNORM_S8_UINT";
		case VK_FORMAT_D24_UNORM_S8_UINT : return "D24_UNORM_S8_UINT";
		case VK_FORMAT_D32_SFLOAT_S8_UINT : return "D32_SFLOAT_S8_UINT";
		case VK_FORMAT_BC1_RGB_UNORM_BLOCK : return "BC1_RGB_UNORM_BLOCK";
		case VK_FORMAT_BC1_RGB_SRGB_BLOCK : return "BC1_RGB_SRGB_BLOCK";
		case VK_FORMAT_BC1_RGBA_UNORM_BLOCK : return "BC1_RGBA_UNORM_BLOCK";
		case VK_FORMAT_BC1_RGBA_SRGB_BLOCK : return "BC1_RGBA_SRGB_BLOCK";
		case VK_FORMAT_BC2_UNORM_BLOCK : return "BC2_UNORM_BLOCK";
		case VK_FORMAT_BC2_SRGB_BLOCK : return "BC2_SRGB_BLOCK";
		case VK_FORMAT_BC3_UNORM_BLOCK : return "BC3_UNORM_BLOCK";
		case VK_FORMAT_BC3_SRGB_BLOCK : return "BC3_SRGB_BLOCK";
		case VK_FORMAT_BC4_UNORM_BLOCK : return "BC4_UNORM_BLOCK";
		case VK_FORMAT_BC4_SNORM_BLOCK : return "BC4_SNORM_BLOCK";
		case VK_FORMAT_BC5_UNORM_BLOCK : return "BC5_UNORM_BLOCK";
		case VK_FORMAT_BC5_SNORM_BLOCK : return "BC5_SNORM_BLOCK";
		case VK_FORMAT_BC6H_UFLOAT_BLOCK : return "BC6H_UFLOAT_BLOCK";
		case VK_FORMAT_BC6H_SFLOAT_BLOCK : return "BC6H_SFLOAT_BLOCK";
		case VK_FORMAT_BC7_UNORM_BLOCK : return "BC7_UNORM_BLOCK";
		case VK_FORMAT_BC7_SRGB_BLOCK : return "BC7_SRGB_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK : return "ETC2_R8G8B8_UNORM_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK : return "ETC2_R8G8B8_SRGB_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK : return "ETC2_R8G8B8A1_UNORM_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK : return "ETC2_R8G8B8A1_SRGB_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK : return "ETC2_R8G8B8A8_UNORM_BLOCK";
		case VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK : return "ETC2_R8G8B8A8_SRGB_BLOCK";
		case VK_FORMAT_EAC_R11_UNORM_BLOCK : return "EAC_R11_UNORM_BLOCK";
		case VK_FORMAT_EAC_R11_SNORM_BLOCK : return "EAC_R11_SNORM_BLOCK";
		case VK_FORMAT_EAC_R11G11_UNORM_BLOCK : return "EAC_R11G11_UNORM_BLOCK";
		case VK_FORMAT_EAC_R11G11_SNORM_BLOCK : return "EAC_R11G11_SNORM_BLOCK";
		case VK_FORMAT_ASTC_4x4_UNORM_BLOCK : return "ASTC_4x4_UNORM_BLOCK";
		case VK_FORMAT_ASTC_4x4_SRGB_BLOCK : return "ASTC_4x4_SRGB_BLOCK";
		case VK_FORMAT_ASTC_5x4_UNORM_BLOCK : return "ASTC_5x4_UNORM_BLOCK";
		case VK_FORMAT_ASTC_5x4_SRGB_BLOCK : return "ASTC_5x4_SRGB_BLOCK";
		case VK_FORMAT_ASTC_5x5_UNORM_BLOCK : return "ASTC_5x5_UNORM_BLOCK";
		case VK_FORMAT_ASTC_5x5_SRGB_BLOCK : return "ASTC_5x5_SRGB_BLOCK";
		case VK_FORMAT_ASTC_6x5_UNORM_BLOCK : return "ASTC_6x5_UNORM_BLOCK";
		case VK_FORMAT_ASTC_6x5_SRGB_BLOCK : return "ASTC_6x5_SRGB_BLOCK";
		case VK_FORMAT_ASTC_6x6_UNORM_BLOCK : return "ASTC_6x6_UNORM_BLOCK";
		case VK_FORMAT_ASTC_6x6_SRGB_BLOCK : return "ASTC_6x6_SRGB_BLOCK";
		case VK_FORMAT_ASTC_8x5_UNORM_BLOCK : return "ASTC_8x5_UNORM_BLOCK";
		case VK_FORMAT_ASTC_8x5_SRGB_BLOCK : return "ASTC_8x5_SRGB_BLOCK";
		case VK_FORMAT_ASTC_8x6_UNORM_BLOCK : return "ASTC_8x6_UNORM_BLOCK";
		case VK_FORMAT_ASTC_8x6_SRGB_BLOCK : return "ASTC_8x6_SRGB_BLOCK";
		case VK_FORMAT_ASTC_8x8_UNORM_BLOCK : return "ASTC_8x8_UNORM_BLOCK";
		case VK_FORMAT_ASTC_8x8_SRGB_BLOCK : return "ASTC_8x8_SRGB_BLOCK";
		case VK_FORMAT_ASTC_10x5_UNORM_BLOCK : return "ASTC_10x5_UNORM_BLOCK";
		case VK_FORMAT_ASTC_10x5_SRGB_BLOCK : return "ASTC_10x5_SRGB_BLOCK";
		case VK_FORMAT_ASTC_10x6_UNORM_BLOCK : return "ASTC_10x6_UNORM_BLOCK";
		case VK_FORMAT_ASTC_10x6_SRGB_BLOCK : return "ASTC_10x6_SRGB_BLOCK";
		case VK_FORMAT_ASTC_10x8_UNORM_BLOCK : return "ASTC_10x8_UNORM_BLOCK";
		case VK_FORMAT_ASTC_10x8_SRGB_BLOCK : return "ASTC_10x8_SRGB_BLOCK";
		case VK_FORMAT_ASTC_10x10_UNORM_BLOCK : return "ASTC_10x10_UNORM_BLOCK";
		case VK_FORMAT_ASTC_10x10_SRGB_BLOCK : return "ASTC_10x10_SRGB_BLOCK";
		case VK_FORMAT_ASTC_12x10_UNORM_BLOCK : return "ASTC_12x10_UNORM_BLOCK";
		case VK_FORMAT_ASTC_12x10_SRGB_BLOCK : return "ASTC_12x10_SRGB_BLOCK";
		case VK_FORMAT_ASTC_12x12_UNORM_BLOCK : return "ASTC_12x12_UNORM_BLOCK";
		case VK_FORMAT_ASTC_12x12_SRGB_BLOCK : return "ASTC_12x12_SRGB_BLOCK";
		case VK_FORMAT_G8B8G8R8_422_UNORM : return "G8B8G8R8_422_UNORM";
		case VK_FORMAT_B8G8R8G8_422_UNORM : return "B8G8R8G8_422_UNORM";
		case VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM : return "G8_B8_R8_3PLANE_420_UNORM";
		case VK_FORMAT_G8_B8R8_2PLANE_420_UNORM : return "G8_B8R8_2PLANE_420_UNORM";
		case VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM : return "G8_B8_R8_3PLANE_422_UNORM";
		case VK_FORMAT_G8_B8R8_2PLANE_422_UNORM : return "G8_B8R8_2PLANE_422_UNORM";
		case VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM : return "G8_B8_R8_3PLANE_444_UNORM";
		case VK_FORMAT_R10X6_UNORM_PACK16 : return "R10X6_UNORM_PACK16";
		case VK_FORMAT_R10X6G10X6_UNORM_2PACK16 : return "R10X6G10X6_UNORM_2PACK16";
		case VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 : return "R10X6G10X6B10X6A10X6_UNORM_4PACK16";
		case VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 : return "G10X6B10X6G10X6R10X6_422_UNORM_4PACK16";
		case VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 : return "B10X6G10X6R10X6G10X6_422_UNORM_4PACK16";
		case VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 : return "G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16";
		case VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 : return "G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16";
		case VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 : return "G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16";
		case VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 : return "G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16";
		case VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 : return "G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16";
		case VK_FORMAT_R12X4_UNORM_PACK16 : return "R12X4_UNORM_PACK16";
		case VK_FORMAT_R12X4G12X4_UNORM_2PACK16 : return "R12X4G12X4_UNORM_2PACK16";
		case VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 : return "R12X4G12X4B12X4A12X4_UNORM_4PACK16";
		case VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 : return "G12X4B12X4G12X4R12X4_422_UNORM_4PACK16";
		case VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 : return "B12X4G12X4R12X4G12X4_422_UNORM_4PACK16";
		case VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 : return "G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16";
		case VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 : return "G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16";
		case VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 : return "G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16";
		case VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 : return "G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16";
		case VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 : return "G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16";
		case VK_FORMAT_G16B16G16R16_422_UNORM : return "G16B16G16R16_422_UNORM";
		case VK_FORMAT_B16G16R16G16_422_UNORM : return "B16G16R16G16_422_UNORM";
		case VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM : return "G16_B16_R16_3PLANE_420_UNORM";
		case VK_FORMAT_G16_B16R16_2PLANE_420_UNORM : return "G16_B16R16_2PLANE_420_UNORM";
		case VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM : return "G16_B16_R16_3PLANE_422_UNORM";
		case VK_FORMAT_G16_B16R16_2PLANE_422_UNORM : return "G16_B16R16_2PLANE_422_UNORM";
		case VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM : return "G16_B16_R16_3PLANE_444_UNORM";
		case VK_FORMAT_G8_B8R8_2PLANE_444_UNORM : return "G8_B8R8_2PLANE_444_UNORM";
		case VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 : return "G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16";
		case VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 : return "G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16";
		case VK_FORMAT_G16_B16R16_2PLANE_444_UNORM : return "G16_B16R16_2PLANE_444_UNORM";
		case VK_FORMAT_A4R4G4B4_UNORM_PACK16 : return "A4R4G4B4_UNORM_PACK16";
		case VK_FORMAT_A4B4G4R4_UNORM_PACK16 : return "A4B4G4R4_UNORM_PACK16";
		case VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK : return "ASTC_4x4_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK : return "ASTC_5x4_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK : return "ASTC_5x5_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK : return "ASTC_6x5_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK : return "ASTC_6x6_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK : return "ASTC_8x5_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK : return "ASTC_8x6_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK : return "ASTC_8x8_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK : return "ASTC_10x5_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK : return "ASTC_10x6_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK : return "ASTC_10x8_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK : return "ASTC_10x10_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK : return "ASTC_12x10_SFLOAT_BLOCK";
		case VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK : return "ASTC_12x12_SFLOAT_BLOCK";
		case VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG : return "PVRTC1_2BPP_UNORM_BLOCK_IMG";
		case VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG : return "PVRTC1_4BPP_UNORM_BLOCK_IMG";
		case VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG : return "PVRTC2_2BPP_UNORM_BLOCK_IMG";
		case VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG : return "PVRTC2_4BPP_UNORM_BLOCK_IMG";
		case VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG : return "PVRTC1_2BPP_SRGB_BLOCK_IMG";
		case VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG : return "PVRTC1_4BPP_SRGB_BLOCK_IMG";
		case VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG : return "PVRTC2_2BPP_SRGB_BLOCK_IMG";
		case VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG : return "PVRTC2_4BPP_SRGB_BLOCK_IMG";
		case VK_FORMAT_R16G16_S10_5_NV : return "R16G16_S10_5";
	}
	return "<unknown>";
}

ND_ String  VkPipelineStageFlagBitsToString (const VkPipelineStageFlagBits value)
{
	switch ( value )
	{
		case VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT : return "TOP_OF_PIPE";
		case VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT : return "DRAW_INDIRECT";
		case VK_PIPELINE_STAGE_VERTEX_INPUT_BIT : return "VERTEX_INPUT";
		case VK_PIPELINE_STAGE_VERTEX_SHADER_BIT : return "VERTEX_SHADER";
		case VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT : return "TESSELLATION_CONTROL_SHADER";
		case VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT : return "TESSELLATION_EVALUATION_SHADER";
		case VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT : return "GEOMETRY_SHADER";
		case VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT : return "FRAGMENT_SHADER";
		case VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT : return "EARLY_FRAGMENT_TESTS";
		case VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT : return "LATE_FRAGMENT_TESTS";
		case VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT : return "COLOR_ATTACHMENT_OUTPUT";
		case VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT : return "COMPUTE_SHADER";
		case VK_PIPELINE_STAGE_TRANSFER_BIT : return "TRANSFER";
		case VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT : return "BOTTOM_OF_PIPE";
		case VK_PIPELINE_STAGE_HOST_BIT : return "HOST";
		case VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT : return "ALL_GRAPHICS";
		case VK_PIPELINE_STAGE_ALL_COMMANDS_BIT : return "ALL_COMMANDS";
		case VK_PIPELINE_STAGE_NONE : return "NONE";
		case VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT : return "TRANSFORM_FEEDBACK";
		case VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT : return "CONDITIONAL_RENDERING";
		case VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR : return "ACCELERATION_STRUCTURE_BUILD";
		case VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR : return "RAY_TRACING_SHADER";
		case VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT : return "FRAGMENT_DENSITY_PROCESS";
		case VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT";
		case VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV : return "COMMAND_PREPROCESS";
		case VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT : return "TASK_SHADER";
		case VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT : return "MESH_SHADER";
	}
	return "<unknown>";
}

ND_ String  VkAccessFlagBitsToString (const VkAccessFlagBits value)
{
	switch ( value )
	{
		case VK_ACCESS_INDIRECT_COMMAND_READ_BIT : return "INDIRECT_COMMAND_READ";
		case VK_ACCESS_INDEX_READ_BIT : return "INDEX_READ";
		case VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT : return "VERTEX_ATTRIBUTE_READ";
		case VK_ACCESS_UNIFORM_READ_BIT : return "UNIFORM_READ";
		case VK_ACCESS_INPUT_ATTACHMENT_READ_BIT : return "INPUT_ATTACHMENT_READ";
		case VK_ACCESS_SHADER_READ_BIT : return "SHADER_READ";
		case VK_ACCESS_SHADER_WRITE_BIT : return "SHADER_WRITE";
		case VK_ACCESS_COLOR_ATTACHMENT_READ_BIT : return "COLOR_ATTACHMENT_READ";
		case VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT : return "COLOR_ATTACHMENT_WRITE";
		case VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT : return "DEPTH_STENCIL_ATTACHMENT_READ";
		case VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT : return "DEPTH_STENCIL_ATTACHMENT_WRITE";
		case VK_ACCESS_TRANSFER_READ_BIT : return "TRANSFER_READ";
		case VK_ACCESS_TRANSFER_WRITE_BIT : return "TRANSFER_WRITE";
		case VK_ACCESS_HOST_READ_BIT : return "HOST_READ";
		case VK_ACCESS_HOST_WRITE_BIT : return "HOST_WRITE";
		case VK_ACCESS_MEMORY_READ_BIT : return "MEMORY_READ";
		case VK_ACCESS_MEMORY_WRITE_BIT : return "MEMORY_WRITE";
		case VK_ACCESS_NONE : return "NONE";
		case VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT : return "TRANSFORM_FEEDBACK_WRITE";
		case VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT : return "TRANSFORM_FEEDBACK_COUNTER_READ";
		case VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT : return "TRANSFORM_FEEDBACK_COUNTER_WRITE";
		case VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT : return "CONDITIONAL_RENDERING_READ";
		case VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT : return "COLOR_ATTACHMENT_READ_NONCOHERENT";
		case VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR : return "ACCELERATION_STRUCTURE_READ";
		case VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR : return "ACCELERATION_STRUCTURE_WRITE";
		case VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT : return "FRAGMENT_DENSITY_MAP_READ";
		case VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT_READ";
		case VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV : return "COMMAND_PREPROCESS_READ";
		case VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV : return "COMMAND_PREPROCESS_WRITE";
	}
	return "<unknown>";
}

ND_ String  VkImageLayoutToString (const VkImageLayout value)
{
	switch ( value )
	{
		case VK_IMAGE_LAYOUT_UNDEFINED : return "UNDEFINED";
		case VK_IMAGE_LAYOUT_GENERAL : return "GENERAL";
		case VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL : return "COLOR_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL : return "DEPTH_STENCIL_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL : return "DEPTH_STENCIL_READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL : return "SHADER_READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL : return "TRANSFER_SRC_OPTIMAL";
		case VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL : return "TRANSFER_DST_OPTIMAL";
		case VK_IMAGE_LAYOUT_PREINITIALIZED : return "PREINITIALIZED";
		case VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL : return "DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL : return "DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL : return "DEPTH_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL : return "DEPTH_READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL : return "STENCIL_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL : return "STENCIL_READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL : return "READ_ONLY_OPTIMAL";
		case VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL : return "ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_PRESENT_SRC_KHR : return "PRESENT_SRC";
		case VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR : return "VIDEO_DECODE_DST";
		case VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR : return "VIDEO_DECODE_SRC";
		case VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR : return "VIDEO_DECODE_DPB";
		case VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR : return "SHARED_PRESENT";
		case VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT : return "FRAGMENT_DENSITY_MAP_OPTIMAL";
		case VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL";
		case VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR : return "VIDEO_ENCODE_DST";
		case VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR : return "VIDEO_ENCODE_SRC";
		case VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR : return "VIDEO_ENCODE_DPB";
		case VK_IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT : return "ATTACHMENT_FEEDBACK_LOOP_OPTIMAL";
	}
	return "<unknown>";
}

ND_ String  VkDependencyFlagBitsToString (const VkDependencyFlagBits value)
{
	switch ( value )
	{
		case VK_DEPENDENCY_BY_REGION_BIT : return "BY_REGION";
		case VK_DEPENDENCY_DEVICE_GROUP_BIT : return "DEVICE_GROUP";
		case VK_DEPENDENCY_VIEW_LOCAL_BIT : return "VIEW_LOCAL";
		case VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT : return "FEEDBACK_LOOP";
	}
	return "<unknown>";
}

ND_ String  VkSampleCountFlagBitsToString (const VkSampleCountFlagBits value)
{
	switch ( value )
	{
		case VK_SAMPLE_COUNT_1_BIT : return "1";
		case VK_SAMPLE_COUNT_2_BIT : return "2";
		case VK_SAMPLE_COUNT_4_BIT : return "4";
		case VK_SAMPLE_COUNT_8_BIT : return "8";
		case VK_SAMPLE_COUNT_16_BIT : return "16";
		case VK_SAMPLE_COUNT_32_BIT : return "32";
		case VK_SAMPLE_COUNT_64_BIT : return "64";
	}
	return "<unknown>";
}

ND_ String  VkAttachmentLoadOpToString (const VkAttachmentLoadOp value)
{
	switch ( value )
	{
		case VK_ATTACHMENT_LOAD_OP_LOAD : return "LOAD";
		case VK_ATTACHMENT_LOAD_OP_CLEAR : return "CLEAR";
		case VK_ATTACHMENT_LOAD_OP_DONT_CARE : return "DONT_CARE";
		case VK_ATTACHMENT_LOAD_OP_NONE_EXT : return "NONE";
	}
	return "<unknown>";
}

ND_ String  VkAttachmentStoreOpToString (const VkAttachmentStoreOp value)
{
	switch ( value )
	{
		case VK_ATTACHMENT_STORE_OP_STORE : return "STORE";
		case VK_ATTACHMENT_STORE_OP_DONT_CARE : return "DONT_CARE";
		case VK_ATTACHMENT_STORE_OP_NONE : return "NONE";
	}
	return "<unknown>";
}

ND_ String  VkImageAspectFlagBitsToString (const VkImageAspectFlagBits value)
{
	switch ( value )
	{
		case VK_IMAGE_ASPECT_COLOR_BIT : return "COLOR";
		case VK_IMAGE_ASPECT_DEPTH_BIT : return "DEPTH";
		case VK_IMAGE_ASPECT_STENCIL_BIT : return "STENCIL";
		case VK_IMAGE_ASPECT_METADATA_BIT : return "METADATA";
		case VK_IMAGE_ASPECT_PLANE_0_BIT : return "PLANE_0";
		case VK_IMAGE_ASPECT_PLANE_1_BIT : return "PLANE_1";
		case VK_IMAGE_ASPECT_PLANE_2_BIT : return "PLANE_2";
		case VK_IMAGE_ASPECT_NONE : return "NONE";
		case VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT : return "MEMORY_PLANE_0";
		case VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT : return "MEMORY_PLANE_1";
		case VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT : return "MEMORY_PLANE_2";
		case VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT : return "MEMORY_PLANE_3";
	}
	return "<unknown>";
}

ND_ String  VkStructureTypeToString (const VkStructureType value)
{
	switch ( value )
	{
		case VK_STRUCTURE_TYPE_APPLICATION_INFO : return "APPLICATION_INFO";
		case VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO : return "INSTANCE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO : return "DEVICE_QUEUE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO : return "DEVICE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SUBMIT_INFO : return "SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO : return "MEMORY_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE : return "MAPPED_MEMORY_RANGE";
		case VK_STRUCTURE_TYPE_BIND_SPARSE_INFO : return "BIND_SPARSE_INFO";
		case VK_STRUCTURE_TYPE_FENCE_CREATE_INFO : return "FENCE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO : return "SEMAPHORE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EVENT_CREATE_INFO : return "EVENT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO : return "QUERY_POOL_CREATE_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO : return "BUFFER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO : return "BUFFER_VIEW_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO : return "IMAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO : return "IMAGE_VIEW_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO : return "SHADER_MODULE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO : return "PIPELINE_CACHE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO : return "PIPELINE_SHADER_STAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO : return "PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO : return "PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO : return "PIPELINE_TESSELLATION_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO : return "PIPELINE_VIEWPORT_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO : return "PIPELINE_RASTERIZATION_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO : return "PIPELINE_MULTISAMPLE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO : return "PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO : return "PIPELINE_COLOR_BLEND_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO : return "PIPELINE_DYNAMIC_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO : return "GRAPHICS_PIPELINE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO : return "COMPUTE_PIPELINE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO : return "PIPELINE_LAYOUT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO : return "SAMPLER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO : return "DESCRIPTOR_SET_LAYOUT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO : return "DESCRIPTOR_POOL_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO : return "DESCRIPTOR_SET_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET : return "WRITE_DESCRIPTOR_SET";
		case VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET : return "COPY_DESCRIPTOR_SET";
		case VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO : return "FRAMEBUFFER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO : return "RENDER_PASS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO : return "COMMAND_POOL_CREATE_INFO";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO : return "COMMAND_BUFFER_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO : return "COMMAND_BUFFER_INHERITANCE_INFO";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO : return "COMMAND_BUFFER_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO : return "RENDER_PASS_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER : return "BUFFER_MEMORY_BARRIER";
		case VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER : return "IMAGE_MEMORY_BARRIER";
		case VK_STRUCTURE_TYPE_MEMORY_BARRIER : return "MEMORY_BARRIER";
		case VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO : return "LOADER_INSTANCE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO : return "LOADER_DEVICE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES : return "PHYSICAL_DEVICE_SUBGROUP_PROPERTIES";
		case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO : return "BIND_BUFFER_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO : return "BIND_IMAGE_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES : return "PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES";
		case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS : return "MEMORY_DEDICATED_REQUIREMENTS";
		case VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO : return "MEMORY_DEDICATED_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO : return "MEMORY_ALLOCATE_FLAGS_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO : return "DEVICE_GROUP_RENDER_PASS_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO : return "DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO : return "DEVICE_GROUP_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO : return "DEVICE_GROUP_BIND_SPARSE_INFO";
		case VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO : return "BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO";
		case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO : return "BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES : return "PHYSICAL_DEVICE_GROUP_PROPERTIES";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO : return "DEVICE_GROUP_DEVICE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 : return "BUFFER_MEMORY_REQUIREMENTS_INFO_2";
		case VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 : return "IMAGE_MEMORY_REQUIREMENTS_INFO_2";
		case VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 : return "IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2";
		case VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 : return "MEMORY_REQUIREMENTS_2";
		case VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 : return "SPARSE_IMAGE_MEMORY_REQUIREMENTS_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 : return "PHYSICAL_DEVICE_FEATURES_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 : return "PHYSICAL_DEVICE_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 : return "FORMAT_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 : return "IMAGE_FORMAT_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 : return "PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 : return "QUEUE_FAMILY_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 : return "PHYSICAL_DEVICE_MEMORY_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 : return "SPARSE_IMAGE_FORMAT_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 : return "PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES : return "PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES";
		case VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO : return "RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO : return "IMAGE_VIEW_USAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO : return "PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO : return "RENDER_PASS_MULTIVIEW_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES : return "PHYSICAL_DEVICE_MULTIVIEW_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES : return "PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES : return "PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES";
		case VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO : return "PROTECTED_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES : return "PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES : return "PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES";
		case VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 : return "DEVICE_QUEUE_INFO_2";
		case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO : return "SAMPLER_YCBCR_CONVERSION_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO : return "SAMPLER_YCBCR_CONVERSION_INFO";
		case VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO : return "BIND_IMAGE_PLANE_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO : return "IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES : return "PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES";
		case VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES : return "SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO : return "DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO : return "PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO";
		case VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES : return "EXTERNAL_IMAGE_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO : return "PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO";
		case VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES : return "EXTERNAL_BUFFER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES : return "PHYSICAL_DEVICE_ID_PROPERTIES";
		case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO : return "EXTERNAL_MEMORY_BUFFER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO : return "EXTERNAL_MEMORY_IMAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO : return "EXPORT_MEMORY_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO : return "PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO";
		case VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES : return "EXTERNAL_FENCE_PROPERTIES";
		case VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO : return "EXPORT_FENCE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO : return "EXPORT_SEMAPHORE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO : return "PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO";
		case VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES : return "EXTERNAL_SEMAPHORE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES : return "PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT : return "DESCRIPTOR_SET_LAYOUT_SUPPORT";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES : return "PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES : return "PHYSICAL_DEVICE_VULKAN_1_1_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES : return "PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES : return "PHYSICAL_DEVICE_VULKAN_1_2_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES : return "PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES";
		case VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO : return "IMAGE_FORMAT_LIST_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 : return "ATTACHMENT_DESCRIPTION_2";
		case VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 : return "ATTACHMENT_REFERENCE_2";
		case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 : return "SUBPASS_DESCRIPTION_2";
		case VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 : return "SUBPASS_DEPENDENCY_2";
		case VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 : return "RENDER_PASS_CREATE_INFO_2";
		case VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO : return "SUBPASS_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_SUBPASS_END_INFO : return "SUBPASS_END_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES : return "PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES : return "PHYSICAL_DEVICE_DRIVER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES : return "PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES : return "PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES : return "PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO : return "DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES : return "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES : return "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO : return "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT : return "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES : return "PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES";
		case VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE : return "SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES : return "PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES";
		case VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO : return "IMAGE_STENCIL_USAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES : return "PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES";
		case VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO : return "SAMPLER_REDUCTION_MODE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES : return "PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES : return "PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES";
		case VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO : return "FRAMEBUFFER_ATTACHMENTS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO : return "FRAMEBUFFER_ATTACHMENT_IMAGE_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO : return "RENDER_PASS_ATTACHMENT_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES : return "PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES : return "PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES : return "PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES";
		case VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT : return "ATTACHMENT_REFERENCE_STENCIL_LAYOUT";
		case VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT : return "ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES : return "PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES : return "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES : return "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES";
		case VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO : return "SEMAPHORE_TYPE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO : return "TIMELINE_SEMAPHORE_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO : return "SEMAPHORE_WAIT_INFO";
		case VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO : return "SEMAPHORE_SIGNAL_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES : return "PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES";
		case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO : return "BUFFER_DEVICE_ADDRESS_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO : return "BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO : return "MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO : return "DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES : return "PHYSICAL_DEVICE_VULKAN_1_3_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES : return "PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO : return "PIPELINE_CREATION_FEEDBACK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES : return "PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES : return "PHYSICAL_DEVICE_TOOL_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES : return "PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES : return "PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES";
		case VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO : return "DEVICE_PRIVATE_DATA_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO : return "PRIVATE_DATA_SLOT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES : return "PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES";
		case VK_STRUCTURE_TYPE_MEMORY_BARRIER_2 : return "MEMORY_BARRIER_2";
		case VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 : return "BUFFER_MEMORY_BARRIER_2";
		case VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 : return "IMAGE_MEMORY_BARRIER_2";
		case VK_STRUCTURE_TYPE_DEPENDENCY_INFO : return "DEPENDENCY_INFO";
		case VK_STRUCTURE_TYPE_SUBMIT_INFO_2 : return "SUBMIT_INFO_2";
		case VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO : return "SEMAPHORE_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO : return "COMMAND_BUFFER_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES : return "PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES : return "PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES : return "PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES";
		case VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2 : return "COPY_BUFFER_INFO_2";
		case VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2 : return "COPY_IMAGE_INFO_2";
		case VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 : return "COPY_BUFFER_TO_IMAGE_INFO_2";
		case VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 : return "COPY_IMAGE_TO_BUFFER_INFO_2";
		case VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 : return "BLIT_IMAGE_INFO_2";
		case VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 : return "RESOLVE_IMAGE_INFO_2";
		case VK_STRUCTURE_TYPE_BUFFER_COPY_2 : return "BUFFER_COPY_2";
		case VK_STRUCTURE_TYPE_IMAGE_COPY_2 : return "IMAGE_COPY_2";
		case VK_STRUCTURE_TYPE_IMAGE_BLIT_2 : return "IMAGE_BLIT_2";
		case VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 : return "BUFFER_IMAGE_COPY_2";
		case VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2 : return "IMAGE_RESOLVE_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES : return "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO : return "PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES : return "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES : return "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES : return "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES";
		case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK : return "WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO : return "DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES : return "PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES";
		case VK_STRUCTURE_TYPE_RENDERING_INFO : return "RENDERING_INFO";
		case VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO : return "RENDERING_ATTACHMENT_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO : return "PIPELINE_RENDERING_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES : return "PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO : return "COMMAND_BUFFER_INHERITANCE_RENDERING_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES : return "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES : return "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES : return "PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES";
		case VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 : return "FORMAT_PROPERTIES_3";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES : return "PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES : return "PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES";
		case VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS : return "DEVICE_BUFFER_MEMORY_REQUIREMENTS";
		case VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS : return "DEVICE_IMAGE_MEMORY_REQUIREMENTS";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR : return "SWAPCHAIN_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PRESENT_INFO_KHR : return "PRESENT_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR : return "DEVICE_GROUP_PRESENT_CAPABILITIES";
		case VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR : return "IMAGE_SWAPCHAIN_CREATE_INFO";
		case VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR : return "BIND_IMAGE_MEMORY_SWAPCHAIN_INFO";
		case VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR : return "ACQUIRE_NEXT_IMAGE_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR : return "DEVICE_GROUP_PRESENT_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR : return "DEVICE_GROUP_SWAPCHAIN_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR : return "DISPLAY_MODE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR : return "DISPLAY_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR : return "DISPLAY_PRESENT_INFO";
		case VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR : return "XLIB_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR : return "XCB_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR : return "WAYLAND_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR : return "ANDROID_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR : return "WIN32_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT : return "DEBUG_REPORT_CALLBACK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD : return "PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER";
		case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT : return "DEBUG_MARKER_OBJECT_NAME_INFO";
		case VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT : return "DEBUG_MARKER_OBJECT_TAG_INFO";
		case VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT : return "DEBUG_MARKER_MARKER_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR : return "VIDEO_PROFILE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR : return "VIDEO_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR : return "VIDEO_PICTURE_RESOURCE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR : return "VIDEO_SESSION_MEMORY_REQUIREMENTS";
		case VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR : return "BIND_VIDEO_SESSION_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR : return "VIDEO_SESSION_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR : return "VIDEO_SESSION_PARAMETERS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR : return "VIDEO_SESSION_PARAMETERS_UPDATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR : return "VIDEO_BEGIN_CODING_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR : return "VIDEO_END_CODING_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR : return "VIDEO_CODING_CONTROL_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR : return "VIDEO_REFERENCE_SLOT_INFO";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR : return "QUEUE_FAMILY_VIDEO_PROPERTIES";
		case VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR : return "VIDEO_PROFILE_LIST_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR : return "PHYSICAL_DEVICE_VIDEO_FORMAT_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR : return "VIDEO_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR : return "QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR : return "VIDEO_DECODE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR : return "VIDEO_DECODE_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR : return "VIDEO_DECODE_USAGE_INFO";
		case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV : return "DEDICATED_ALLOCATION_IMAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV : return "DEDICATED_ALLOCATION_BUFFER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV : return "DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT : return "PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT : return "PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT : return "PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO";
		case VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX : return "CU_MODULE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX : return "CU_FUNCTION_CREATE_INFO";
		case VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX : return "CU_LAUNCH_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX : return "IMAGE_VIEW_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX : return "IMAGE_VIEW_ADDRESS_PROPERTIES";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT : return "VIDEO_ENCODE_H264_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT : return "VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT : return "VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT : return "VIDEO_ENCODE_H264_VCL_FRAME_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT : return "VIDEO_ENCODE_H264_DPB_SLOT_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_EXT : return "VIDEO_ENCODE_H264_NALU_SLICE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_EXT : return "VIDEO_ENCODE_H264_PROFILE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT : return "VIDEO_ENCODE_H264_RATE_CONTROL_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT : return "VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT : return "VIDEO_ENCODE_H265_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT : return "VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT : return "VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT : return "VIDEO_ENCODE_H265_VCL_FRAME_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT : return "VIDEO_ENCODE_H265_DPB_SLOT_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_EXT : return "VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_EXT : return "VIDEO_ENCODE_H265_PROFILE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT : return "VIDEO_ENCODE_H265_RATE_CONTROL_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT : return "VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR : return "VIDEO_DECODE_H264_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR : return "VIDEO_DECODE_H264_PICTURE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR : return "VIDEO_DECODE_H264_PROFILE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR : return "VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR : return "VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR : return "VIDEO_DECODE_H264_DPB_SLOT_INFO";
		case VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD : return "TEXTURE_LOD_GATHER_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR : return "RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO";
		case VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT : return "RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO";
		case VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD : return "ATTACHMENT_SAMPLE_COUNT_INFO";
		case VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX : return "MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO";
		case VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP : return "STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV : return "PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES";
		case VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV : return "EXTERNAL_MEMORY_IMAGE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV : return "EXPORT_MEMORY_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV : return "IMPORT_MEMORY_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV : return "EXPORT_MEMORY_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV : return "WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO";
		case VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT : return "VALIDATION_FLAGS";
		case VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN : return "VI_SURFACE_CREATE_INFO_NN";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT : return "IMAGE_VIEW_ASTC_DECODE_MODE";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT : return "PHYSICAL_DEVICE_ASTC_DECODE_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT : return "PIPELINE_ROBUSTNESS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT : return "PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT : return "PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR : return "IMPORT_MEMORY_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR : return "EXPORT_MEMORY_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR : return "MEMORY_WIN32_HANDLE_PROPERTIES";
		case VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR : return "MEMORY_GET_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR : return "IMPORT_MEMORY_FD_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR : return "MEMORY_FD_PROPERTIES";
		case VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR : return "MEMORY_GET_FD_INFO";
		case VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR : return "WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR : return "IMPORT_SEMAPHORE_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR : return "EXPORT_SEMAPHORE_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR : return "D3D12_FENCE_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR : return "SEMAPHORE_GET_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR : return "IMPORT_SEMAPHORE_FD_INFO";
		case VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR : return "SEMAPHORE_GET_FD_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR : return "PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT : return "COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT : return "PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES";
		case VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT : return "CONDITIONAL_RENDERING_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR : return "PRESENT_REGIONS";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV : return "PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT : return "SURFACE_CAPABILITIES_2";
		case VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT : return "DISPLAY_POWER_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT : return "DEVICE_EVENT_INFO";
		case VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT : return "DISPLAY_EVENT_INFO";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT : return "SWAPCHAIN_COUNTER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE : return "PRESENT_TIMES_INFO_GOOGLE";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX : return "PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV : return "PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT : return "PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT : return "PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT : return "PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT : return "PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT : return "PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT : return "PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_HDR_METADATA_EXT : return "HDR_METADATA";
		case VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR : return "SHARED_PRESENT_SURFACE_CAPABILITIES";
		case VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR : return "IMPORT_FENCE_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR : return "EXPORT_FENCE_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR : return "FENCE_GET_WIN32_HANDLE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR : return "IMPORT_FENCE_FD_INFO";
		case VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR : return "FENCE_GET_FD_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR : return "PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR : return "PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES";
		case VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR : return "QUERY_POOL_PERFORMANCE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR : return "PERFORMANCE_QUERY_SUBMIT_INFO";
		case VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR : return "ACQUIRE_PROFILING_LOCK_INFO";
		case VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR : return "PERFORMANCE_COUNTER";
		case VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR : return "PERFORMANCE_COUNTER_DESCRIPTION";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR : return "PHYSICAL_DEVICE_SURFACE_INFO_2";
		case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR : return "SURFACE_CAPABILITIES_2";
		case VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR : return "SURFACE_FORMAT_2";
		case VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR : return "DISPLAY_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR : return "DISPLAY_PLANE_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR : return "DISPLAY_MODE_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR : return "DISPLAY_PLANE_INFO_2";
		case VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR : return "DISPLAY_PLANE_CAPABILITIES_2";
		case VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK : return "IOS_SURFACE_CREATE_INFO_MVK";
		case VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK : return "MACOS_SURFACE_CREATE_INFO_MVK";
		case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT : return "DEBUG_UTILS_OBJECT_NAME_INFO";
		case VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT : return "DEBUG_UTILS_OBJECT_TAG_INFO";
		case VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT : return "DEBUG_UTILS_LABEL";
		case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT : return "DEBUG_UTILS_MESSENGER_CALLBACK_DATA";
		case VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT : return "DEBUG_UTILS_MESSENGER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID : return "ANDROID_HARDWARE_BUFFER_USAGE_ANDROID";
		case VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID : return "ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID";
		case VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID : return "ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID";
		case VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID : return "IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID";
		case VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID : return "MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID";
		case VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID : return "EXTERNAL_FORMAT_ANDROID";
		case VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID : return "ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID";
		case VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT : return "SAMPLE_LOCATIONS_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT : return "RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT : return "PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT : return "PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES";
		case VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT : return "MULTISAMPLE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT : return "PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT : return "PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT : return "PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV : return "PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR : return "WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR : return "ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR : return "ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR : return "ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR : return "ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR : return "ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR : return "ACCELERATION_STRUCTURE_GEOMETRY";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR : return "ACCELERATION_STRUCTURE_VERSION_INFO";
		case VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR : return "COPY_ACCELERATION_STRUCTURE_INFO";
		case VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR : return "COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR : return "COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR : return "PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR : return "PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR : return "ACCELERATION_STRUCTURE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR : return "ACCELERATION_STRUCTURE_BUILD_SIZES_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR : return "PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR : return "PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES";
		case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR : return "RAY_TRACING_PIPELINE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR : return "RAY_TRACING_SHADER_GROUP_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR : return "RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR : return "PHYSICAL_DEVICE_RAY_QUERY_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV : return "PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV : return "PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV : return "PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES";
		case VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT : return "DRM_FORMAT_MODIFIER_PROPERTIES_LIST";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT : return "PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT : return "IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT : return "IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT : return "IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES";
		case VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT : return "DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2";
		case VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT : return "VALIDATION_CACHE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT : return "SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR : return "PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR : return "PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV : return "PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV : return "PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV : return "PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV : return "PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV : return "RAY_TRACING_PIPELINE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV : return "ACCELERATION_STRUCTURE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_GEOMETRY_NV : return "GEOMETRY";
		case VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV : return "GEOMETRY_TRIANGLES";
		case VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV : return "GEOMETRY_AABB";
		case VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV : return "BIND_ACCELERATION_STRUCTURE_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV : return "WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV : return "ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV : return "PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES";
		case VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV : return "RAY_TRACING_SHADER_GROUP_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV : return "ACCELERATION_STRUCTURE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV : return "PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV : return "PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT : return "PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO";
		case VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT : return "FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT : return "IMPORT_MEMORY_HOST_POINTER_INFO";
		case VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT : return "MEMORY_HOST_POINTER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT : return "PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR : return "PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD : return "PIPELINE_COMPILER_CONTROL_CREATE_INFO";
		case VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT : return "CALIBRATED_TIMESTAMP_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD : return "PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR : return "VIDEO_DECODE_H265_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR : return "VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR : return "VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR : return "VIDEO_DECODE_H265_PROFILE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR : return "VIDEO_DECODE_H265_PICTURE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR : return "VIDEO_DECODE_H265_DPB_SLOT_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR : return "DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR : return "PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR : return "QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES";
		case VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD : return "DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT : return "PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT : return "PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT : return "PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES";
		case VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP : return "PRESENT_FRAME_TOKEN_GGP";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV : return "PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV : return "PHYSICAL_DEVICE_MESH_SHADER_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV : return "PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV : return "PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV : return "PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV : return "PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES";
		case VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV : return "CHECKPOINT_DATA";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV : return "QUEUE_FAMILY_CHECKPOINT_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL : return "PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL";
		case VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL : return "QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL";
		case VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL : return "INITIALIZE_PERFORMANCE_API_INFO_INTEL";
		case VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL : return "PERFORMANCE_MARKER_INFO_INTEL";
		case VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL : return "PERFORMANCE_STREAM_MARKER_INFO_INTEL";
		case VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL : return "PERFORMANCE_OVERRIDE_INFO_INTEL";
		case VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL : return "PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT : return "PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES";
		case VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD : return "DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD : return "SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO";
		case VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA : return "IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT : return "METAL_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES";
		case VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT : return "RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO";
		case VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR : return "PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR : return "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR : return "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR : return "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD : return "PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD : return "PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT : return "PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT : return "PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT : return "PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES";
		case VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT : return "MEMORY_PRIORITY_ALLOCATE_INFO";
		case VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR : return "SURFACE_PROTECTED_CAPABILITIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV : return "PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT : return "PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES";
		case VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT : return "BUFFER_DEVICE_ADDRESS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT : return "VALIDATION_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR : return "PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV : return "PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES";
		case VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV : return "COOPERATIVE_MATRIX_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV : return "PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV : return "PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV : return "PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV : return "FRAMEBUFFER_MIXED_SAMPLES_COMBINATION";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT : return "PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT : return "PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT : return "PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT : return "PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT : return "PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES";
		case VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT : return "SURFACE_FULL_SCREEN_EXCLUSIVE_INFO";
		case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT : return "SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE";
		case VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT : return "SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO";
		case VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT : return "HEADLESS_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT : return "PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT : return "PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT : return "PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT : return "PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT : return "PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT : return "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR : return "PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR : return "PIPELINE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR : return "PIPELINE_EXECUTABLE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR : return "PIPELINE_EXECUTABLE_INFO";
		case VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR : return "PIPELINE_EXECUTABLE_STATISTIC";
		case VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR : return "PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT : return "PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES";
		case VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT : return "SURFACE_PRESENT_MODE";
		case VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT : return "SURFACE_PRESENT_SCALING_CAPABILITIES";
		case VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT : return "SURFACE_PRESENT_MODE_COMPATIBILITY";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT : return "PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT : return "SWAPCHAIN_PRESENT_FENCE_INFO";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT : return "SWAPCHAIN_PRESENT_MODES_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT : return "SWAPCHAIN_PRESENT_MODE_INFO";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT : return "SWAPCHAIN_PRESENT_SCALING_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT : return "RELEASE_SWAPCHAIN_IMAGES_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV : return "PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES";
		case VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV : return "GRAPHICS_SHADER_GROUP_CREATE_INFO";
		case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV : return "GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO";
		case VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV : return "INDIRECT_COMMANDS_LAYOUT_TOKEN";
		case VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV : return "INDIRECT_COMMANDS_LAYOUT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV : return "GENERATED_COMMANDS_INFO";
		case VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV : return "GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV : return "PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV : return "PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV : return "COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT : return "PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES";
		case VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM : return "COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM : return "RENDER_PASS_TRANSFORM_BEGIN_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT : return "PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES";
		case VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT : return "DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT : return "DEVICE_MEMORY_REPORT_CALLBACK_DATA";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT : return "PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT : return "PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES";
		case VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT : return "SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT : return "PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT : return "PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR : return "PIPELINE_LIBRARY_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV : return "PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES";
		case VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV : return "SURFACE_CAPABILITIES_PRESENT_BARRIER";
		case VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV : return "SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PRESENT_ID_KHR : return "PRESENT_ID";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR : return "PHYSICAL_DEVICE_PRESENT_ID_FEATURES";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR : return "VIDEO_ENCODE_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR : return "VIDEO_ENCODE_RATE_CONTROL_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR : return "VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR : return "VIDEO_ENCODE_CAPABILITIES";
		case VK_STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR : return "VIDEO_ENCODE_USAGE_INFO";
		case VK_STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR : return "QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV : return "PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES";
		case VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV : return "DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO";
		case VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV : return "QUERY_LOW_LATENCY_SUPPORT";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT : return "EXPORT_METAL_OBJECT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT : return "EXPORT_METAL_OBJECTS_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT : return "EXPORT_METAL_DEVICE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT : return "EXPORT_METAL_COMMAND_QUEUE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT : return "EXPORT_METAL_BUFFER_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT : return "IMPORT_METAL_BUFFER_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT : return "EXPORT_METAL_TEXTURE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT : return "IMPORT_METAL_TEXTURE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT : return "EXPORT_METAL_IO_SURFACE_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT : return "IMPORT_METAL_IO_SURFACE_INFO";
		case VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT : return "EXPORT_METAL_SHARED_EVENT_INFO";
		case VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT : return "IMPORT_METAL_SHARED_EVENT_INFO";
		case VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV : return "QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2";
		case VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV : return "CHECKPOINT_DATA_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT : return "PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT : return "PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT : return "PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT : return "DESCRIPTOR_ADDRESS_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT : return "DESCRIPTOR_GET_INFO";
		case VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT : return "BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT : return "IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT : return "IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO";
		case VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT : return "SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO";
		case VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT : return "OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT : return "DESCRIPTOR_BUFFER_BINDING_INFO";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT : return "DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT : return "ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT : return "PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT : return "PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES";
		case VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT : return "GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD : return "PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR : return "PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR : return "PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR : return "PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV : return "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV : return "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV : return "PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV : return "ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV : return "PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV : return "ACCELERATION_STRUCTURE_MOTION_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT : return "PHYSICAL_DEVICE_MESH_SHADER_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT : return "PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT : return "PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES";
		case VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM : return "COPY_COMMAND_TRANSFORM_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR : return "PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT : return "PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES";
		case VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT : return "IMAGE_COMPRESSION_CONTROL";
		case VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT : return "SUBRESOURCE_LAYOUT_2";
		case VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT : return "IMAGE_SUBRESOURCE_2";
		case VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT : return "IMAGE_COMPRESSION_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT : return "PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT : return "PHYSICAL_DEVICE_4444_FORMATS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT : return "PHYSICAL_DEVICE_FAULT_FEATURES";
		case VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT : return "DEVICE_FAULT_COUNTS";
		case VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT : return "DEVICE_FAULT_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT : return "PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES";
		case VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT : return "DIRECTFB_SURFACE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT : return "PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES";
		case VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT : return "VERTEX_INPUT_BINDING_DESCRIPTION_2";
		case VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT : return "VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT : return "PHYSICAL_DEVICE_DRM_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT : return "PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES";
		case VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT : return "DEVICE_ADDRESS_BINDING_CALLBACK_DATA";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT : return "PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT : return "PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT : return "PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA : return "IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA : return "MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA";
		case VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA : return "MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA : return "IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA : return "SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA : return "BUFFER_COLLECTION_CREATE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA : return "IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA : return "BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA : return "BUFFER_COLLECTION_PROPERTIES_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA : return "BUFFER_CONSTRAINTS_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA : return "BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA : return "IMAGE_CONSTRAINTS_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA : return "IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA : return "SYSMEM_COLOR_SPACE_FUCHSIA";
		case VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA : return "BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA";
		case VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI : return "SUBPASS_SHADING_PIPELINE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI : return "PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI : return "PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI : return "PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES";
		case VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV : return "MEMORY_GET_REMOTE_ADDRESS_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV : return "PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT : return "PIPELINE_PROPERTIES_IDENTIFIER";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT : return "PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT : return "PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES";
		case VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT : return "SUBPASS_RESOLVE_PERFORMANCE_QUERY";
		case VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT : return "MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT : return "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES";
		case VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX : return "SCREEN_SURFACE_CREATE_INFO_QNX";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT : return "PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES";
		case VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT : return "PIPELINE_COLOR_WRITE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT : return "PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR : return "PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT : return "PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT : return "IMAGE_VIEW_MIN_LOD_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT : return "PHYSICAL_DEVICE_MULTI_DRAW_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT : return "PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT : return "PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES";
		case VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT : return "MICROMAP_BUILD_INFO";
		case VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT : return "MICROMAP_VERSION_INFO";
		case VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT : return "COPY_MICROMAP_INFO";
		case VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT : return "COPY_MICROMAP_TO_MEMORY_INFO";
		case VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT : return "COPY_MEMORY_TO_MICROMAP_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT : return "PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT : return "PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES";
		case VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT : return "MICROMAP_CREATE_INFO";
		case VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT : return "MICROMAP_BUILD_SIZES_INFO";
		case VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT : return "ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI : return "PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI : return "PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT : return "PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES";
		case VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT : return "SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT : return "PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM : return "PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT : return "PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT : return "IMAGE_VIEW_SLICED_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE : return "PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE : return "DESCRIPTOR_SET_BINDING_REFERENCE_VALVE";
		case VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE : return "DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT : return "PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT : return "PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM : return "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES";
		case VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM : return "SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV : return "PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV : return "PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV : return "PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV : return "PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV : return "PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT : return "PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM : return "PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM : return "PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES";
		case VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM : return "IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT : return "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT : return "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT : return "PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES";
		case VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT : return "RENDER_PASS_CREATION_CONTROL";
		case VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT : return "RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT : return "RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO";
		case VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG : return "DIRECT_DRIVER_LOADING_INFO_LUNARG";
		case VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG : return "DIRECT_DRIVER_LOADING_LIST_LUNARG";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT : return "PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT : return "PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT : return "PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO";
		case VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT : return "SHADER_MODULE_IDENTIFIER";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT : return "PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV : return "PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV : return "PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES";
		case VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV : return "OPTICAL_FLOW_IMAGE_FORMAT_INFO";
		case VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV : return "OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES";
		case VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV : return "OPTICAL_FLOW_SESSION_CREATE_INFO";
		case VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV : return "OPTICAL_FLOW_EXECUTE_INFO";
		case VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV : return "OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT : return "PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT : return "PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM : return "PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES";
		case VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM : return "TILE_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC : return "PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC";
		case VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC : return "AMIGO_PROFILING_SUBMIT_INFO_SEC";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM : return "PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV : return "PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV : return "PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT : return "PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES";
		case VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT : return "MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM : return "PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM : return "PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT : return "PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES";
		case VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM : return "PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES";
		case VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM : return "MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO";
	}
	return "<unknown>";
}

ND_ String  VkRenderPassCreateFlagBitsToString (const VkRenderPassCreateFlagBits value)
{
	switch ( value )
	{
		case VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM : return "TRANSFORM";
	}
	return "<unknown>";
}

ND_ String  VkAttachmentDescriptionFlagBitsToString (const VkAttachmentDescriptionFlagBits value)
{
	switch ( value )
	{
		case VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT : return "MAY_ALIAS";
	}
	return "<unknown>";
}

ND_ String  VkSubpassDescriptionFlagBitsToString (const VkSubpassDescriptionFlagBits value)
{
	switch ( value )
	{
		case VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX : return "PER_VIEW_ATTRIBUTES";
		case VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX : return "PER_VIEW_POSITION_X_ONLY";
		case VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM : return "FRAGMENT_REGION";
		case VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM : return "SHADER_RESOLVE";
		case VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT : return "RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS";
		case VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT : return "RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS";
		case VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT : return "RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS";
		case VK_SUBPASS_DESCRIPTION_ENABLE_LEGACY_DITHERING_BIT_EXT : return "ENABLE_LEGACY_DITHERING";
	}
	return "<unknown>";
}

ND_ String  VkPipelineBindPointToString (const VkPipelineBindPoint value)
{
	switch ( value )
	{
		case VK_PIPELINE_BIND_POINT_GRAPHICS : return "GRAPHICS";
		case VK_PIPELINE_BIND_POINT_COMPUTE : return "COMPUTE";
		case VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR : return "RAY_TRACING";
		case VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI : return "SUBPASS_SHADING";
	}
	return "<unknown>";
}

ND_ String  VkQueueFlagBitsToString (const VkQueueFlagBits value)
{
	switch ( value )
	{
		case VK_QUEUE_GRAPHICS_BIT : return "GRAPHICS";
		case VK_QUEUE_COMPUTE_BIT : return "COMPUTE";
		case VK_QUEUE_TRANSFER_BIT : return "TRANSFER";
		case VK_QUEUE_SPARSE_BINDING_BIT : return "SPARSE_BINDING";
		case VK_QUEUE_PROTECTED_BIT : return "PROTECTED";
		case VK_QUEUE_VIDEO_DECODE_BIT_KHR : return "VIDEO_DECODE";
		case VK_QUEUE_VIDEO_ENCODE_BIT_KHR : return "VIDEO_ENCODE";
		case VK_QUEUE_OPTICAL_FLOW_BIT_NV : return "OPTICAL_FLOW";
	}
	return "<unknown>";
}

ND_ String  VkPipelineStageFlagBits2ToString (const VkPipelineStageFlagBits2 value)
{
	switch ( value )
	{
		case VK_PIPELINE_STAGE_2_NONE : return "NONE";
		case VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT : return "TOP_OF_PIPE";
		case VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT : return "DRAW_INDIRECT";
		case VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT : return "VERTEX_INPUT";
		case VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT : return "VERTEX_SHADER";
		case VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT : return "TESSELLATION_CONTROL_SHADER";
		case VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT : return "TESSELLATION_EVALUATION_SHADER";
		case VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT : return "GEOMETRY_SHADER";
		case VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT : return "FRAGMENT_SHADER";
		case VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT : return "EARLY_FRAGMENT_TESTS";
		case VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT : return "LATE_FRAGMENT_TESTS";
		case VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT : return "COLOR_ATTACHMENT_OUTPUT";
		case VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT : return "COMPUTE_SHADER";
		case VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT : return "ALL_TRANSFER";
		case VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT : return "BOTTOM_OF_PIPE";
		case VK_PIPELINE_STAGE_2_HOST_BIT : return "HOST";
		case VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT : return "ALL_GRAPHICS";
		case VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT : return "ALL_COMMANDS";
		case VK_PIPELINE_STAGE_2_COPY_BIT : return "COPY";
		case VK_PIPELINE_STAGE_2_RESOLVE_BIT : return "RESOLVE";
		case VK_PIPELINE_STAGE_2_BLIT_BIT : return "BLIT";
		case VK_PIPELINE_STAGE_2_CLEAR_BIT : return "CLEAR";
		case VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT : return "INDEX_INPUT";
		case VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT : return "VERTEX_ATTRIBUTE_INPUT";
		case VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT : return "PRE_RASTERIZATION_SHADERS";
		case VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR : return "VIDEO_DECODE";
		case VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR : return "VIDEO_ENCODE";
		case VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT : return "TRANSFORM_FEEDBACK";
		case VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT : return "CONDITIONAL_RENDERING";
		case VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV : return "COMMAND_PREPROCESS";
		case VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT";
		case VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR : return "ACCELERATION_STRUCTURE_BUILD";
		case VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR : return "RAY_TRACING_SHADER";
		case VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT : return "FRAGMENT_DENSITY_PROCESS";
		case VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV : return "TASK_SHADER";
		case VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV : return "MESH_SHADER";
		case VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI : return "SUBPASS_SHADING";
		case VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI : return "INVOCATION_MASK";
		case VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR : return "ACCELERATION_STRUCTURE_COPY";
		case VK_PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT : return "MICROMAP_BUILD";
		case VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI : return "CLUSTER_CULLING_SHADER";
		case VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV : return "OPTICAL_FLOW";
	}
	return "<unknown>";
}

ND_ String  VkAccessFlagBits2ToString (const VkAccessFlagBits2 value)
{
	switch ( value )
	{
		case VK_ACCESS_2_NONE : return "NONE";
		case VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT : return "INDIRECT_COMMAND_READ";
		case VK_ACCESS_2_INDEX_READ_BIT : return "INDEX_READ";
		case VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT : return "VERTEX_ATTRIBUTE_READ";
		case VK_ACCESS_2_UNIFORM_READ_BIT : return "UNIFORM_READ";
		case VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT : return "INPUT_ATTACHMENT_READ";
		case VK_ACCESS_2_SHADER_READ_BIT : return "SHADER_READ";
		case VK_ACCESS_2_SHADER_WRITE_BIT : return "SHADER_WRITE";
		case VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT : return "COLOR_ATTACHMENT_READ";
		case VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT : return "COLOR_ATTACHMENT_WRITE";
		case VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT : return "DEPTH_STENCIL_ATTACHMENT_READ";
		case VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT : return "DEPTH_STENCIL_ATTACHMENT_WRITE";
		case VK_ACCESS_2_TRANSFER_READ_BIT : return "TRANSFER_READ";
		case VK_ACCESS_2_TRANSFER_WRITE_BIT : return "TRANSFER_WRITE";
		case VK_ACCESS_2_HOST_READ_BIT : return "HOST_READ";
		case VK_ACCESS_2_HOST_WRITE_BIT : return "HOST_WRITE";
		case VK_ACCESS_2_MEMORY_READ_BIT : return "MEMORY_READ";
		case VK_ACCESS_2_MEMORY_WRITE_BIT : return "MEMORY_WRITE";
		case VK_ACCESS_2_SHADER_SAMPLED_READ_BIT : return "SHADER_SAMPLED_READ";
		case VK_ACCESS_2_SHADER_STORAGE_READ_BIT : return "SHADER_STORAGE_READ";
		case VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT : return "SHADER_STORAGE_WRITE";
		case VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR : return "VIDEO_DECODE_READ";
		case VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR : return "VIDEO_DECODE_WRITE";
		case VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR : return "VIDEO_ENCODE_READ";
		case VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR : return "VIDEO_ENCODE_WRITE";
		case VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT : return "TRANSFORM_FEEDBACK_WRITE";
		case VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT : return "TRANSFORM_FEEDBACK_COUNTER_READ";
		case VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT : return "TRANSFORM_FEEDBACK_COUNTER_WRITE";
		case VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT : return "CONDITIONAL_RENDERING_READ";
		case VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV : return "COMMAND_PREPROCESS_READ";
		case VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV : return "COMMAND_PREPROCESS_WRITE";
		case VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR : return "FRAGMENT_SHADING_RATE_ATTACHMENT_READ";
		case VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR : return "ACCELERATION_STRUCTURE_READ";
		case VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR : return "ACCELERATION_STRUCTURE_WRITE";
		case VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT : return "FRAGMENT_DENSITY_MAP_READ";
		case VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT : return "COLOR_ATTACHMENT_READ_NONCOHERENT";
		case VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT : return "DESCRIPTOR_BUFFER_READ";
		case VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI : return "INVOCATION_MASK_READ";
		case VK_ACCESS_2_SHADER_BINDING_TABLE_READ_BIT_KHR : return "SHADER_BINDING_TABLE_READ";
		case VK_ACCESS_2_MICROMAP_READ_BIT_EXT : return "MICROMAP_READ";
		case VK_ACCESS_2_MICROMAP_WRITE_BIT_EXT : return "MICROMAP_WRITE";
		case VK_ACCESS_2_OPTICAL_FLOW_READ_BIT_NV : return "OPTICAL_FLOW_READ";
		case VK_ACCESS_2_OPTICAL_FLOW_WRITE_BIT_NV : return "OPTICAL_FLOW_WRITE";
	}
	return "<unknown>";
}

ND_ String  VkPipelineStageFlagsToString (VkPipelineStageFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkPipelineStageFlagBits bit = ExtractBit<VkPipelineStageFlagBits,VkPipelineStageFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkPipelineStageFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkAccessFlagsToString (VkAccessFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkAccessFlagBits bit = ExtractBit<VkAccessFlagBits,VkAccessFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkAccessFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkDependencyFlagsToString (VkDependencyFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkDependencyFlagBits bit = ExtractBit<VkDependencyFlagBits,VkDependencyFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkDependencyFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkImageAspectFlagsToString (VkImageAspectFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkImageAspectFlagBits bit = ExtractBit<VkImageAspectFlagBits,VkImageAspectFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkImageAspectFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkPipelineStageFlags2ToString (VkPipelineStageFlags2 bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkPipelineStageFlagBits2 bit = ExtractBit<VkPipelineStageFlagBits2,VkPipelineStageFlags2>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkPipelineStageFlagBits2ToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkAccessFlags2ToString (VkAccessFlags2 bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkAccessFlagBits2 bit = ExtractBit<VkAccessFlagBits2,VkAccessFlags2>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkAccessFlagBits2ToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkRenderPassCreateFlagsToString (VkRenderPassCreateFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkRenderPassCreateFlagBits bit = ExtractBit<VkRenderPassCreateFlagBits,VkRenderPassCreateFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkRenderPassCreateFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkAttachmentDescriptionFlagsToString (VkAttachmentDescriptionFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkAttachmentDescriptionFlagBits bit = ExtractBit<VkAttachmentDescriptionFlagBits,VkAttachmentDescriptionFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkAttachmentDescriptionFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkSubpassDescriptionFlagsToString (VkSubpassDescriptionFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkSubpassDescriptionFlagBits bit = ExtractBit<VkSubpassDescriptionFlagBits,VkSubpassDescriptionFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkSubpassDescriptionFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

ND_ String  VkQueueFlagsToString (VkQueueFlags bits)
{
	String  str;
	while ( bits != 0 )
	{
		VkQueueFlagBits bit = ExtractBit<VkQueueFlagBits,VkQueueFlags>( INOUT bits );
		if ( not str.empty() ) str += " | ";
		str += VkQueueFlagBitsToString( bit );
	}
	return str.size() ? str : "0";
}

